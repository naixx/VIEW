{
  "author": {
    "name": "naixx@github"
  },
  "name": "jpeg-lum",
  "description": "Reads luminance and histogram data from JPEG images (based on Bill Yeh's pixelr and Elijah Parker)",
  "version": "0.5.0",
  "homepage": "https://github.com/naixx/node-jpeg-lum/",
  "repository": {
    "type": "git",
    "url": "git://github.com/naixx/node-jpeg-lum.git"
  },
  "keywords": [
    "photography",
    "luminance",
    "exposure",
    "jpeg",
    "histogram"
  ],
  "main": "./main",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "About\n========\nCalculates the luminance value and histogram of JPEG images.  This is based on Bill Yeh's excellent node-pixelr (https://github.com/billyeh/node-pixelr), adapted for getting luminance and histogram data instead of raw pixels.\n\nI was originally using node-pixelr and calculating luminance and histogram data in javascript, but I thought it would be faster to do it in C++ before sending it to js.  In the end, I can't say I notice much difference in speed, though I haven't done any benchmarking.\n\nThe method for luminance is something I came up with after some trial and error.  I don't know if it's correct or ideal, but it's working for my application (adjusting exposure based on the luminance).\n\n0.2.1 Update: build error fix\n0.2.0 Update: changed algorithm to be lookup table based instead of trying to calculate, removed histogram array for now\n0.1.0 Update: added \"clipped\" property to results; percentage (0-1) of pixels at 255\n0.0.4 Update: further refined luminance value to match camera exposure\n0.0.3 Update: changed gamma correction to 1/2.2\n0.0.2 Update: converted pixel value to linear (removed gamma correction) before calculating luminance\n\nExample\n==========\n```\nvar luminance = require('jpeg-lum');\n\n/** luminance.read(filename, callback)\n * Filename points to a JPEG image\n * The callback takes an object with properties 'histogram' (an array), 'luminance', 'clipped' (0-1, percentage of pixels at 255), width', and 'height'.\n */\nluminance.read(\"image.jpeg\", function(err, res) {\n  console.log(\"Luminance:\", res.luminance);\n  console.log(\"Percentage clipped:\", res.clipped);\n  console.log(\"Histogram Array:\", res.histogram);\n});\n\n\n```\n\nDocumentation\n===============\nJPEG parsing uses `libjpeg`\n\n\nInstallation\n===============\n```\n$ npm install jpeg-lum\n```\n\nLicense\n=========\n\n(The MIT License)\n\nModifications for jpeg-lum Copyright (c) 2016 Elijah Parker\n\nPixelr codebase Copyright (c) 2013 Bill Yeh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/naixx/node-jpeg-lum/issues"
  },
  "_id": "jpeg-lum@0.5.0",
  "_shasum": "e5069dd1c52467d55cf03ae4131554b8c8a83033",
  "_resolved": "git+https://github.com/naixx/node-jpeg-lum#46fc01d66b3b40e5c23709faecfee97339b6cc52",
  "_from": "git+https://github.com/naixx/node-jpeg-lum#hist"
}
